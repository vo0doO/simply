<div class="notification flex items-center justify-center p-4 fixed top-0 shadow-lg bg-dark z-20 mx-auto right-0 left-0 text-white invisible">
    <div class="notification-subscribe hidden"><span class="text-22 mr-3">ðŸŽ‰</span> {{t "You've successfully subscribed to"}} {{@site.title}}!</div>
    <span class="notification-signup hidden">{{t "Great! Next, complete checkout for full access to"}} {{@site.title}}</span>
    <span class="notification-signin hidden">{{t "Welcome back! You've successfully signed in."}}</span>
    <span class="notification-signin-failure hidden text-danger font-semibold">{{t "Unable to sign you in. Please try again."}}</span>
    <span class="notification-checkout hidden">{{t "Success! Your account is fully activated, you now have access to all content."}}</span>
    <span class="notification-billing-update hidden">{{t "Success! Your billing info is updated."}}</span>
    <span class="notification-billing-update-cancel hidden">{{t "Billing info update failed."}}</span>
    <div class="notification-close button is-small is-primary ml-3">OK</div>
</div>

{{!-- Scripts for Members subscription --}}
{{#contentFor "scripts"}}
<script>
    // Parse the URL parameter
    function getParameterByName(name, url) {
        if (!url) url = window.location.href;
        name = name.replace(/[\[\]]/g, "\\$&");
        var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
            results = regex.exec(url);
        if (!results) return null;
        if (!results[2]) return '';
        return decodeURIComponent(results[2].replace(/\+/g, " "));
    }
    // Give the parameter a variable name
    var action = getParameterByName('action');
    var stripe = getParameterByName('stripe');
    var success = getParameterByName('success');

    function notificationReady() {
        var $body = document.body;
        var hasNotification = 'has-notification';

        if (action == 'subscribe') {
            $body.classList.add('subscribe-success', hasNotification);
        }
        if (action == 'signup') {
            window.location = '{{@site.url}}/#/portal/signup';
        }
        if (action == 'checkout') {
            $body.classList.add('signup-success', hasNotification);
        }
        if (action == 'signin' && (success === null || success === 'true')) {
            $body.classList.add('signin-success', hasNotification);
        }
        if (action == 'signin' && success === 'false') {
            $body.classList.add('signin-failure', hasNotification);
        }
        if (stripe == 'success') {
            $body.classList.add('checkout-success', hasNotification);
        }
        if (stripe == 'billing-update-success') {
            $body.classList.add('billing-success', hasNotification);
        }
        if (stripe == 'billing-update-cancel') {
            $body.classList.add('billing-cancel', hasNotification);
        }

        document.querySelector('.notification-close').addEventListener('click', function() {
            this.parentNode.classList.add('close');
            var uri = window.location.toString();
            if (uri.indexOf('?') > 0) {
                var clean_uri = uri.substring(0, uri.indexOf('?'));
                window.history.replaceState({}, document.title, clean_uri);
            }
        });
    }

    window.addEventListener('load', notificationReady, false);
</script>
{{/contentFor}}